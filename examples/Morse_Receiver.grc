options:
  parameters:
    author: henningM1r
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: gr_Morse_Receiver
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: gr_Morse_Receiver
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [9, 9]
    rotation: 0
    state: enabled

blocks:
- name: freq_morse
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: Frequency
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '7000000'
    step: '1'
    stop: '7040000'
    value: '7000000'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [278, 9]
    rotation: 0
    state: enabled
- name: freq_shift_corr
  id: variable
  parameters:
    comment: 'to match signals found

      in spectrum analysers'
    value: '-500'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 140.0]
    rotation: 0
    state: true
- name: gain
  id: variable_qtgui_range
  parameters:
    comment: signal gain
    gui_hint: ''
    label: Gain
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '25'
    step: '1'
    stop: '1000'
    value: '450'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [416, 12.0]
    rotation: 0
    state: enabled
- name: hi_thres
  id: variable_qtgui_range
  parameters:
    comment: thresholder high
    gui_hint: ''
    label: high_thres
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0.01'
    step: '0.01'
    stop: '10'
    value: '1'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 12.0]
    rotation: 0
    state: enabled
- name: lo_thres
  id: variable_qtgui_range
  parameters:
    comment: thresholder low
    gui_hint: ''
    label: low_thres
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0.01'
    step: '0.01'
    stop: '1'
    value: '0.1'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [536, 12.0]
    rotation: 0
    state: enabled
- name: loudness
  id: variable_qtgui_range
  parameters:
    comment: 'avoid listening to

      loud clipped signals'
    gui_hint: ''
    label: loudness
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0.01'
    step: '0.01'
    stop: '1'
    value: '0.1'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [784, 12.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '192000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [181, 9]
    rotation: 0
    state: enabled
- name: analog_simple_squelch_cc_0_0
  id: analog_simple_squelch_cc
  parameters:
    affinity: ''
    alias: ''
    alpha: '1'
    comment: 'filter out low noise

      below given threshold'
    maxoutbuf: '0'
    minoutbuf: '0'
    threshold: '-110'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [624, 444.0]
    rotation: 0
    state: enabled
- name: audio_sink_0
  id: audio_sink
  parameters:
    affinity: ''
    alias: ''
    comment: "listening live to \nMorse symbols"
    device_name: ''
    num_inputs: '1'
    ok_to_block: 'True'
    samp_rate: '24000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [696, 636.0]
    rotation: 0
    state: enabled
- name: band_pass_filter_0
  id: band_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: 'avery dense filter

      to pick up just one

      Morse signal'
    decim: '8'
    gain: '15'
    high_cutoff_freq: '875'
    interp: '1'
    low_cutoff_freq: '425'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fir_filter_ccf
    width: '425'
    win: window.WIN_BLACKMAN
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [392, 396.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_mag_squared_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 720.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_xx_0
  id: blocks_multiply_const_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: gain
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [864, 452.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_xx_0_0
  id: blocks_multiply_const_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: loudness
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 636.0]
    rotation: 0
    state: true
- name: blocks_threshold_ff_0
  id: blocks_threshold_ff
  parameters:
    affinity: ''
    alias: ''
    comment: 'Decide whether

      the received signal

      is on or off'
    high: hi_thres
    init: '0'
    low: lo_thres
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 812.0]
    rotation: 0
    state: true
- name: epy_block_0_0
  id: epy_block
  parameters:
    ASCII_pause: '650'
    OOK_pause: '240'
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport pmt\n\n\n\n# counts number of ones of current\
      \ status\n_num_ones  = 0\n\n# counts number of zeros of current status\n_num_zeros\
      \ = 0\n\n# stores current on/off status\n_sync = -1\n\n\nclass blk(gr.sync_block):\n\
      \n    def __init__(self, OOK_pause=270, ASCII_pause=825, short_sym=280, long_sym=870,\
      \ break_pause=1200, tolerance=40, debug=False, verbose=True):\n\n        gr.sync_block.__init__(\n\
      \            self,\n            name='Morse Decoder',\n            in_sig=[np.float32],\n\
      \            out_sig=[np.float32]\n        )\n        \n        # durations\
      \ of the symbols and pauses\n        self.tolerance   = tolerance\n        self.OOK_pause\
      \   = OOK_pause\n        self.ASCII_pause = ASCII_pause\n        self.short_sym\
      \   = short_sym\n        self.long_sym    = long_sym\n        self.break_pause\
      \ = break_pause\n\n        # verbose/debug output\n        self.debug      \
      \ = debug\n        self.verbose     = verbose\n\n        if self.verbose ==\
      \ True:\n            print(\"tolerance: \", self.tolerance)\n            print(\"\
      OOK pause: \", self.OOK_pause)\n            print(\"ASCII pause: \", self.ASCII_pause)\n\
      \            print(\"short sym: \", self.short_sym)\n            print(\"long\
      \ sym: \", self.long_sym)\n            print(\"break: \", self.break_pause)\n\
      \n        # output message\n        self.message_port_register_out(pmt.intern('msg_out'))\n\
      \        \n\n    def work(self, input_items, output_items):\n        global\
      \ _num_zeros\n        global _num_ones\n        global _sync\n\n        inp\
      \ = input_items[0]\n\n        for idx in range(len(inp)):\n            ch =\
      \ inp[idx]\n\n            if ch == 1:\n                _num_ones += 1\n\n  \
      \          else: # ch == 0\n                _num_zeros += 1\n\n            #\
      \ out of sync status\n            if _sync == -1:\n                _num_zeros\
      \ = 0\n                _num_ones = 0\n\n                if ch == 0:\n      \
      \              _sync = 0\n                    if self.debug:\n             \
      \           print(\"sync 0\")\n                \n                elif ch ==\
      \ 1:\n                    _sync = 1\n                    if self.debug:\n  \
      \                      print(\"sync 1\")\n            \n            # status:\
      \ currently off\n            elif _sync == 0:\n                # status remains\
      \ identical\n                if ch == 0:\n                    pass\n       \
      \         \n                elif ch == 1:\n                    _sync = 1\n \
      \                   # WARN: this print is very slow, and may cause GNURadio\
      \ to crash\n                    #print(f\"sync 1: #zeros: {_num_zeros}\")\n\n\
      \                    # detect OOK pause\n                    if (_num_zeros\
      \ >= self.OOK_pause - self.tolerance and\n                        _num_zeros\
      \ <= self.OOK_pause + self.tolerance):\n                        \n         \
      \               if self.debug:\n                            #print(f\"OOK pause\"\
      )\n                            pass\n\n                        # marking detected\
      \ OOK_pause\n                        key = pmt.intern(\" \")\n             \
      \           value = pmt.intern(\"OOK_pause\")\n                        self.add_item_tag(0,\n\
      \                            self.nitems_written(0) + idx,\n               \
      \             key,\n                            value\n                    \
      \    )\n\n                    # detect ASCII pause\n                    elif\
      \ (_num_zeros >= self.ASCII_pause - self.tolerance and\n                   \
      \     _num_zeros <= self.ASCII_pause + self.tolerance):\n                  \
      \      \n                        if self.verbose:\n                        \
      \    print(\"\")\n                            #print(f\"symbol end\")\n\n  \
      \                      self.message_port_pub(pmt.intern(\"msg_out\"), pmt.intern(\"\
      \ \"))\n\n                        # marking detected ASCII pause\n         \
      \               key = pmt.intern(\" \")\n                        value = pmt.intern(\"\
      ASCII_pause\")\n                        self.add_item_tag(0,\n             \
      \               self.nitems_written(0) + idx,\n                            key,\n\
      \                            value\n                        )\n\n          \
      \          # detect break pause\n                    elif (_num_zeros >= self.break_pause\
      \ - self.tolerance):\n                        \n                        if self.verbose:\n\
      \                            print(\"\")\n                            #print(f\"\
      symbol end, break\")\n                            \n                       \
      \ self.message_port_pub(pmt.intern(\"msg_out\"), pmt.intern(\";\"))\n      \
      \                  \n                        # marking detected break pause\n\
      \                        key = pmt.intern(\" \")\n                        value\
      \ = pmt.intern(\"break_pause\")\n                        self.add_item_tag(0,\n\
      \                            self.nitems_written(0) + idx,\n               \
      \             key,\n                            value\n                    \
      \    )\n\n                    _num_zeros = 0\n            \n            # status:\
      \ currently on\n            elif _sync == 1:\n                # status changes\n\
      \                if ch == 0:\n                    _sync = 0\n              \
      \      # WARN: this print is very slow, and may cause GNURadio to crash\n  \
      \                  #print(f\"sync 0: #ones: {_num_ones}\")\n               \
      \     \n                    # detect short symbol\n                    if (_num_ones\
      \ >= self.short_sym - self.tolerance and\n                        _num_ones\
      \ <= self.short_sym + self.tolerance):\n                        \n         \
      \               if self.verbose:\n                            print(f\".\",\
      \ end=\"\")\n                        self.message_port_pub(pmt.intern(\"msg_out\"\
      ), pmt.intern(\".\"))\n\n                        # marking detected short symbol\n\
      \                        key = pmt.intern(\".\")\n                        value\
      \ = pmt.intern(\".\")\n                        self.add_item_tag(0,\n      \
      \                      self.nitems_written(0) + idx,\n                     \
      \       key,\n                            value\n                        )\n\
      \n                    # detect long symbol\n                    elif (_num_ones\
      \ >= self.long_sym - self.tolerance and\n                          _num_ones\
      \ <= self.long_sym + self.tolerance):\n                        \n          \
      \              if self.verbose:\n                            print(f\"_\", end=\"\
      \")\n                        self.message_port_pub(pmt.intern(\"msg_out\"),\
      \ pmt.intern(\"_\"))\n\n                        # marking detected long symbol\n\
      \                        key = pmt.intern(\"_\")\n                        value\
      \ = pmt.intern(\"_\")\n                        self.add_item_tag(0,\n      \
      \                      self.nitems_written(0) + idx,\n                     \
      \       key,\n                            value\n                        )\n\
      \n                    _num_ones = 0\n\n                # status remains identical\n\
      \                elif ch == 1:\n                    pass\n            \n   \
      \         # reset zeros during longer pauses\n            if _num_zeros >= 200000:\n\
      \                _sync = -1\n                _num_zeros = 0\n              \
      \  _num_ones = 0\n\n            # this should not happen anyway\n          \
      \  if _num_ones >= 200000:\n                _sync = -1\n                _num_zeros\
      \ = 0\n                _num_ones = 0\n\n        # simply pass through original\
      \ signal with tags attached\n        output_items[0][:] = input_items[0]\n\n\
      \        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    break_pause: '930'
    comment: 'determines the morse

      symbols ".", "_", and

      symbol/word breaks

      with a certain tolerance'
    debug: 'False'
    long_sym: '700'
    maxoutbuf: '0'
    minoutbuf: '0'
    short_sym: '240'
    tolerance: '150'
    verbose: 'True'
  states:
    _io_cache: ('Morse Decoder', 'blk', [('OOK_pause', '270'), ('ASCII_pause', '825'),
      ('short_sym', '280'), ('long_sym', '870'), ('break_pause', '1200'), ('tolerance',
      '40'), ('debug', 'False'), ('verbose', 'True')], [('0', 'float', 1)], [('0',
      'float', 1), ('msg_out', 'message', 1)], '', ['ASCII_pause', 'OOK_pause', 'break_pause',
      'debug', 'long_sym', 'short_sym', 'tolerance', 'verbose'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [896, 772.0]
    rotation: 0
    state: enabled
- name: note_0
  id: note
  parameters:
    alias: ''
    comment: 'several (mostly German) websites on Morse code and acronyms


      http://dk3red.homepage.t-online.de/de/s3_02.htm

      http://dk3red.homepage.t-online.de/de/s3.htm

      https://wiki.oevsv.at/wiki/Abk%C3%BCrzungen

      https://www.modellskipper.de/Maritimes/Abkuerzungen_Abschnitt_A/Index

      https://www.qsl.net/dk5ke/abk.html

      https://wiki.edu.vn/wiki18/2021/01/26/abkurzungen-fur-morsecodes-wikipedia/


      https://en.wikipedia.org/wiki/Morse_code_abbreviations'
    note: Morse Abbreviations (German Translation)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1120, 12.0]
    rotation: 0
    state: true
- name: note_1
  id: note
  parameters:
    alias: ''
    comment: "35.7 \u2013 137,8 kHz\n1810 \u2013 1838 kHz\n3500 \u2013 3570 kHz\n\
      7000 \u2013 7040 kHz\n10100 \u2013 10130 kHz\n14000 \u2013 14070 kHz\n18068\
      \ \u2013 18095 kHz\n21000 \u2013 21070 kHz\n24890 \u2013 24915 kHz\n28000 \u2013\
      \ 28070 kHz"
    note: permitted Morse frequencies
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [936, 12.0]
    rotation: 0
    state: true
- name: note_1_0
  id: note
  parameters:
    alias: ''
    comment: '270

      825

      270

      825

      1200

      150'
    note: slower Morse parameters
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [896, 1004.0]
    rotation: 0
    state: true
- name: note_1_0_0
  id: note
  parameters:
    alias: ''
    comment: '240

      650

      240

      700

      930

      150'
    note: faster Morse parameters
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [896, 1140.0]
    rotation: 0
    state: true
- name: osmosdr_source_0
  id: osmosdr_source
  parameters:
    affinity: ''
    alias: ''
    ant0: ''
    ant1: ''
    ant10: ''
    ant11: ''
    ant12: ''
    ant13: ''
    ant14: ''
    ant15: ''
    ant16: ''
    ant17: ''
    ant18: ''
    ant19: ''
    ant2: ''
    ant20: ''
    ant21: ''
    ant22: ''
    ant23: ''
    ant24: ''
    ant25: ''
    ant26: ''
    ant27: ''
    ant28: ''
    ant29: ''
    ant3: ''
    ant30: ''
    ant31: ''
    ant4: ''
    ant5: ''
    ant6: ''
    ant7: ''
    ant8: ''
    ant9: ''
    args: ''
    bb_gain0: '20'
    bb_gain1: '20'
    bb_gain10: '20'
    bb_gain11: '20'
    bb_gain12: '20'
    bb_gain13: '20'
    bb_gain14: '20'
    bb_gain15: '20'
    bb_gain16: '20'
    bb_gain17: '20'
    bb_gain18: '20'
    bb_gain19: '20'
    bb_gain2: '20'
    bb_gain20: '20'
    bb_gain21: '20'
    bb_gain22: '20'
    bb_gain23: '20'
    bb_gain24: '20'
    bb_gain25: '20'
    bb_gain26: '20'
    bb_gain27: '20'
    bb_gain28: '20'
    bb_gain29: '20'
    bb_gain3: '20'
    bb_gain30: '20'
    bb_gain31: '20'
    bb_gain4: '20'
    bb_gain5: '20'
    bb_gain6: '20'
    bb_gain7: '20'
    bb_gain8: '20'
    bb_gain9: '20'
    bw0: '10000'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    corr0: '0'
    corr1: '0'
    corr10: '0'
    corr11: '0'
    corr12: '0'
    corr13: '0'
    corr14: '0'
    corr15: '0'
    corr16: '0'
    corr17: '0'
    corr18: '0'
    corr19: '0'
    corr2: '0'
    corr20: '0'
    corr21: '0'
    corr22: '0'
    corr23: '0'
    corr24: '0'
    corr25: '0'
    corr26: '0'
    corr27: '0'
    corr28: '0'
    corr29: '0'
    corr3: '0'
    corr30: '0'
    corr31: '0'
    corr4: '0'
    corr5: '0'
    corr6: '0'
    corr7: '0'
    corr8: '0'
    corr9: '0'
    dc_offset_mode0: '0'
    dc_offset_mode1: '0'
    dc_offset_mode10: '0'
    dc_offset_mode11: '0'
    dc_offset_mode12: '0'
    dc_offset_mode13: '0'
    dc_offset_mode14: '0'
    dc_offset_mode15: '0'
    dc_offset_mode16: '0'
    dc_offset_mode17: '0'
    dc_offset_mode18: '0'
    dc_offset_mode19: '0'
    dc_offset_mode2: '0'
    dc_offset_mode20: '0'
    dc_offset_mode21: '0'
    dc_offset_mode22: '0'
    dc_offset_mode23: '0'
    dc_offset_mode24: '0'
    dc_offset_mode25: '0'
    dc_offset_mode26: '0'
    dc_offset_mode27: '0'
    dc_offset_mode28: '0'
    dc_offset_mode29: '0'
    dc_offset_mode3: '0'
    dc_offset_mode30: '0'
    dc_offset_mode31: '0'
    dc_offset_mode4: '0'
    dc_offset_mode5: '0'
    dc_offset_mode6: '0'
    dc_offset_mode7: '0'
    dc_offset_mode8: '0'
    dc_offset_mode9: '0'
    freq0: freq_morse + freq_shift_corr
    freq1: 100e6
    freq10: 100e6
    freq11: 100e6
    freq12: 100e6
    freq13: 100e6
    freq14: 100e6
    freq15: 100e6
    freq16: 100e6
    freq17: 100e6
    freq18: 100e6
    freq19: 100e6
    freq2: 100e6
    freq20: 100e6
    freq21: 100e6
    freq22: 100e6
    freq23: 100e6
    freq24: 100e6
    freq25: 100e6
    freq26: 100e6
    freq27: 100e6
    freq28: 100e6
    freq29: 100e6
    freq3: 100e6
    freq30: 100e6
    freq31: 100e6
    freq4: 100e6
    freq5: 100e6
    freq6: 100e6
    freq7: 100e6
    freq8: 100e6
    freq9: 100e6
    gain0: '5'
    gain1: '10'
    gain10: '10'
    gain11: '10'
    gain12: '10'
    gain13: '10'
    gain14: '10'
    gain15: '10'
    gain16: '10'
    gain17: '10'
    gain18: '10'
    gain19: '10'
    gain2: '10'
    gain20: '10'
    gain21: '10'
    gain22: '10'
    gain23: '10'
    gain24: '10'
    gain25: '10'
    gain26: '10'
    gain27: '10'
    gain28: '10'
    gain29: '10'
    gain3: '10'
    gain30: '10'
    gain31: '10'
    gain4: '10'
    gain5: '10'
    gain6: '10'
    gain7: '10'
    gain8: '10'
    gain9: '10'
    gain_mode0: 'True'
    gain_mode1: 'False'
    gain_mode10: 'False'
    gain_mode11: 'False'
    gain_mode12: 'False'
    gain_mode13: 'False'
    gain_mode14: 'False'
    gain_mode15: 'False'
    gain_mode16: 'False'
    gain_mode17: 'False'
    gain_mode18: 'False'
    gain_mode19: 'False'
    gain_mode2: 'False'
    gain_mode20: 'False'
    gain_mode21: 'False'
    gain_mode22: 'False'
    gain_mode23: 'False'
    gain_mode24: 'False'
    gain_mode25: 'False'
    gain_mode26: 'False'
    gain_mode27: 'False'
    gain_mode28: 'False'
    gain_mode29: 'False'
    gain_mode3: 'False'
    gain_mode30: 'False'
    gain_mode31: 'False'
    gain_mode4: 'False'
    gain_mode5: 'False'
    gain_mode6: 'False'
    gain_mode7: 'False'
    gain_mode8: 'False'
    gain_mode9: 'False'
    if_gain0: '20'
    if_gain1: '20'
    if_gain10: '20'
    if_gain11: '20'
    if_gain12: '20'
    if_gain13: '20'
    if_gain14: '20'
    if_gain15: '20'
    if_gain16: '20'
    if_gain17: '20'
    if_gain18: '20'
    if_gain19: '20'
    if_gain2: '20'
    if_gain20: '20'
    if_gain21: '20'
    if_gain22: '20'
    if_gain23: '20'
    if_gain24: '20'
    if_gain25: '20'
    if_gain26: '20'
    if_gain27: '20'
    if_gain28: '20'
    if_gain29: '20'
    if_gain3: '20'
    if_gain30: '20'
    if_gain31: '20'
    if_gain4: '20'
    if_gain5: '20'
    if_gain6: '20'
    if_gain7: '20'
    if_gain8: '20'
    if_gain9: '20'
    iq_balance_mode0: '0'
    iq_balance_mode1: '0'
    iq_balance_mode10: '0'
    iq_balance_mode11: '0'
    iq_balance_mode12: '0'
    iq_balance_mode13: '0'
    iq_balance_mode14: '0'
    iq_balance_mode15: '0'
    iq_balance_mode16: '0'
    iq_balance_mode17: '0'
    iq_balance_mode18: '0'
    iq_balance_mode19: '0'
    iq_balance_mode2: '0'
    iq_balance_mode20: '0'
    iq_balance_mode21: '0'
    iq_balance_mode22: '0'
    iq_balance_mode23: '0'
    iq_balance_mode24: '0'
    iq_balance_mode25: '0'
    iq_balance_mode26: '0'
    iq_balance_mode27: '0'
    iq_balance_mode28: '0'
    iq_balance_mode29: '0'
    iq_balance_mode3: '0'
    iq_balance_mode30: '0'
    iq_balance_mode31: '0'
    iq_balance_mode4: '0'
    iq_balance_mode5: '0'
    iq_balance_mode6: '0'
    iq_balance_mode7: '0'
    iq_balance_mode8: '0'
    iq_balance_mode9: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    num_mboards: '1'
    sample_rate: samp_rate
    sync: none
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [64, 364.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: 'to adjust the

      thresholder'
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '2'
    size: int(samp_rate/8)
    srate: int(samp_rate/32)
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '2.5'
    ymin: '-0.1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1232, 716.0]
    rotation: 0
    state: true
- name: qtgui_waterfall_sink_x_0
  id: qtgui_waterfall_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    axislabels: 'True'
    bw: '1000'
    color1: '0'
    color10: '0'
    color2: '0'
    color3: '0'
    color4: '0'
    color5: '0'
    color6: '0'
    color7: '0'
    color8: '0'
    color9: '0'
    comment: 'helps the user to

      find and adjust

      active Morse

      signals'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    int_max: '10'
    int_min: '-140'
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    showports: 'False'
    type: complex
    update_time: '0.10'
    wintype: window.WIN_BLACKMAN_hARRIS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [392, 260.0]
    rotation: 0
    state: true
- name: rational_resampler_xxx_0_0
  id: rational_resampler_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: 'especially to

      avoid overflows'
    decim: '4'
    fbw: '0'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    taps: '[]'
    type: fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 692.0]
    rotation: 0
    state: enabled
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1096, 452.0]
    rotation: 0
    state: true
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 716.0]
    rotation: 0
    state: true
- name: zeromq_push_msg_sink_1
  id: zeromq_push_msg_sink
  parameters:
    address: tcp://127.0.0.1:55555
    affinity: ''
    alias: ''
    bind: 'True'
    comment: 'provide signal to a ZMQ server

      to futher decode the symbols

      to human-readible ASCII

      symbols and words'
    timeout: '900'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1232, 836.0]
    rotation: 0
    state: enabled

connections:
- [analog_simple_squelch_cc_0_0, '0', blocks_multiply_const_xx_0, '0']
- [band_pass_filter_0, '0', analog_simple_squelch_cc_0_0, '0']
- [blocks_complex_to_mag_squared_0, '0', blocks_multiply_const_xx_0_0, '0']
- [blocks_complex_to_mag_squared_0, '0', rational_resampler_xxx_0_0, '0']
- [blocks_multiply_const_xx_0, '0', virtual_sink_0, '0']
- [blocks_multiply_const_xx_0_0, '0', audio_sink_0, '0']
- [blocks_threshold_ff_0, '0', epy_block_0_0, '0']
- [epy_block_0_0, '0', qtgui_time_sink_x_0, '1']
- [epy_block_0_0, msg_out, zeromq_push_msg_sink_1, in]
- [osmosdr_source_0, '0', band_pass_filter_0, '0']
- [osmosdr_source_0, '0', qtgui_waterfall_sink_x_0, '0']
- [rational_resampler_xxx_0_0, '0', blocks_threshold_ff_0, '0']
- [rational_resampler_xxx_0_0, '0', qtgui_time_sink_x_0, '0']
- [virtual_source_0, '0', blocks_complex_to_mag_squared_0, '0']

metadata:
  file_format: 1
